<aura:component implements="flexipage:availableForAllPageTypes,force:hasRecordId,lightningcommunity:allowInRelaxedCSP" access="global" description="Conversation toolkit api sample">
    <aura:attribute name="recordId" type="String"/>
    <aura:attribute name="messageReceived" type="String"/>
    <aura:attribute name="chatLog" type="Object" />

    <lightning:messageChannel type="SampleMessageChannel__c" aura:id="SampleMessageChannel" onMessage="{!c.sendMessage}" scope="APPLICATION"/>
    <lightning:conversationToolkitAPI aura:id="conversationKit"/>
    <aura:handler event="lightning:omniChannelConnectionError" action="{! c.onConnectionError }"/>
    <aura:handler event="lightning:omniChannelLoginSuccess" action="{! c.onLoginSuccess }"/>
    <lightning:omniToolkitAPI aura:id="omniToolkit"/>

    <!-- Get Agent Message (lightning:conversationAgentSend) -->
    <aura:handler event="lightning:conversationAgentSend" action="{!c.onAgentSend}"/>
    <!-- Get Customer Message (lightning:conversationNewMessage) -->
    <aura:handler event="lightning:conversationNewMessage" action="{!c.onNewMessage}"/>

    <aura:handler event="lightning:omniChannelStatusChanged" action="{! c.onStatusChanged }"/>
    
    <lightning:utilityBarAPI aura:id="utilitybar" />
    <Lightning:messageChannel type="SamplellespageChannelNew__c" aura:id="messageChannel"/>
    <lightning:button label="Set Utility Icon" onclick="{!c.setUtilityIcon}" />
    
    <lightning:button label="Get Agent works" onclick="{! c.getAgentWorks }" /> 
</aura:component>


